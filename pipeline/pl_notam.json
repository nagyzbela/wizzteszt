{
	"name": "pl_notam",
	"properties": {
		"activities": [
			{
				"name": "Notam to temp",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "TLoadDate",
								"value": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							},
							{
								"name": "TFileName",
								"value": {
									"value": "@pipeline().parameters.InputFileName",
									"type": "Expression"
								}
							},
							{
								"name": "TCreatedId",
								"value": {
									"value": "@guid()",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"writeBehavior": "Insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"type": "String",
									"ordinal": 1
								},
								"sink": {
									"name": "notam_line",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TLoadDate",
									"type": "String"
								},
								"sink": {
									"name": "TLoadDate",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TFileName",
									"type": "String"
								},
								"sink": {
									"name": "TFileName",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TCreatedId",
									"type": "String"
								},
								"sink": {
									"name": "TCreatedId",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "NOTAM",
						"type": "DatasetReference",
						"parameters": {
							"file_name": "NOTAM.txt"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "synapse_table",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "notam_tmp"
						}
					}
				]
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "with base_data as (\r\nSELECT [notam_line],row_number() over(order by (SELECT NULL)) rn\r\nFROM [dbo].[notam_tmp]\r\nwhere TFileName='NOTAM.txt'),\r\nheader_data_base as (select  \r\n*,\r\nrow_number() over(order by (SELECT NULL)) rn\r\nfrom \r\nSTRING_SPLIT(\r\n(select \r\nreplace(notam_line,'>NOTAMPARSE<','') ln\r\n from base_data where rn=1),'|')),\r\n header_data as (\r\n select \r\n max( case when rn=1 then value end) [Length],\r\nmax( case when rn=2 then value end) [Format],\r\nmax( case when rn=3 then value end) [SubFormat],\r\nmax( case when rn=4 then value end) [Type],\r\nmax( case when rn=5 then value end) [SubType],\r\nmax( case when rn=6 then value end) [Publisher],\r\nmax( case when rn=7 then value end) [Class],\r\nmax( case when rn=8 then value end) [Series],\r\nmax( case when rn=9 then value end) [Year],\r\nmax( case when rn=10 then value end) [Number],\r\nmax( case when rn=11 then value end) [SubNumber],\r\nmax( case when rn=12 then value end) [Multipart],\r\nmax( case when rn=13 then value end) [QCode23],\r\nmax( case when rn=14 then value end) [QCode45],\r\ndateadd(Second, cast(max( case when rn=15 then value end) as int),'1970-01-01') [EffectiveFrom],\r\ndateadd(Second, cast(max( case when rn=16 then value end) as int),'1970-01-01') [EffectiveTill],\r\nmax( case when rn=17 then value end) [EST],\r\nmax( case when rn=18 then value end) [HeaderIcaoAirportCode],\r\nmax( case when rn=19 then value end) [YearOfReferenceNotam],\r\nmax( case when rn=20 then value end) [NumberOfReferenceNotam],\r\nmax( case when rn=21 then value end) [Unimportant1],\r\nmax( case when rn=22 then value end) [Unimportant2],\r\nmax( case when rn=23 then value end) [NumberAndType]\r\n  from header_data_base),\r\nq_data_base as (select  \r\n*,\r\nrow_number() over(order by (SELECT NULL)) rn\r\nfrom \r\nSTRING_SPLIT(\r\n(select \r\nreplace(notam_line,'Q)','') ln\r\n from base_data where rn=2),'/')),\r\n q_data_base_raw as (\r\n select \r\n max( case when rn=1 then value end) [IcaoCodeFIR],\r\nmax( case when rn=2 then value end) [Code],\r\nmax( case when rn=3 then value end) [Traffic],\r\nmax( case when rn=4 then value end) [Purpose],\r\nmax( case when rn=5 then value end) [Scope],\r\nmax( case when rn=6 then value end) [Lower],\r\nmax( case when rn=7 then value end) [Upper],\r\nmax( case when rn=8 then value end) [GeoLatitudeRaw]\r\n from q_data_base),\r\n q_data as (\r\n select \r\n [IcaoCodeFIR],\r\n[Code],\r\n[Traffic],\r\n[Purpose],\r\n[Scope],\r\n[Lower],\r\n[Upper],\r\ncase when CHARINDEX('S',GeoLatitudeRaw)> 0\r\n     then -1*(cast(SUBSTRING(GeoLatitudeRaw,1,2) as float) +cast(SUBSTRING(GeoLatitudeRaw,3,2) as float)/100)\r\n     else cast(SUBSTRING(GeoLatitudeRaw,1,2) as float) +cast(SUBSTRING(GeoLatitudeRaw,3,2) as float)/100\r\n     end [GeoLatitudeNm],\r\ncase when CHARINDEX('W',GeoLatitudeRaw)> 0\r\n     then -1*(cast(SUBSTRING(GeoLatitudeRaw,6,3) as float) +cast(SUBSTRING(GeoLatitudeRaw,9,2) as float)/100)\r\n     else cast(SUBSTRING(GeoLatitudeRaw,6,3) as float) +cast(SUBSTRING(GeoLatitudeRaw,9,2) as float)/100\r\n     end [GeoLongitudeNm],\r\ncast(right(GeoLatitudeRaw,3) as smallint) [GeoRadiusNm]\r\nfrom q_data_base_raw),\r\na_data as (\r\nselect \r\ntrim(replace(notam_line,'A)','')) IcaoAirportCode\r\n from \r\nbase_data\r\nwhere notam_line like 'A)%'\r\n),\r\nb_data as (\r\nselect \r\ncast(\r\n    '20'+\r\n    substring(substring (trim(replace(notam_line,'B)','')),1,10),1,2)+'-'+\r\n    substring(substring (trim(replace(notam_line,'B)','')),1,10),3,2)+'-'+\r\n    substring(substring (trim(replace(notam_line,'B)','')),1,10),5,2)+' '+\r\n    substring(substring (trim(replace(notam_line,'B)','')),1,10),7,2)+':'+\r\n    substring(substring (trim(replace(notam_line,'B)','')),1,10),9,2)    \r\n     as datetime) ActivityStart,\r\ncast(\r\n    '20'+\r\n    substring(substring (replace(notam_line,' ',''),charindex('C)',replace(notam_line,' ',''))+2,10),1,2)+'-'+\r\n    substring(substring (replace(notam_line,' ',''),charindex('C)',replace(notam_line,' ',''))+2,10),3,2)+'-'+\r\n    substring(substring (replace(notam_line,' ',''),charindex('C)',replace(notam_line,' ',''))+2,10),5,2)+' '+\r\n    substring(substring (replace(notam_line,' ',''),charindex('C)',replace(notam_line,' ',''))+2,10),7,2)+':'+\r\n    substring(substring (replace(notam_line,' ',''),charindex('C)',replace(notam_line,' ',''))+2,10),9,2)    \r\n     as datetime) ValidityEnd\r\n from \r\nbase_data\r\nwhere notam_line like 'B)%') ,\r\nd_data as (\r\nselect \r\n replace(notam_line,'D)','') Schedule\r\n from \r\nbase_data\r\nwhere notam_line like 'D)%'),\r\ne_data as (\r\nselect \r\n replace(notam_line,'E)','') Text\r\n from \r\nbase_data\r\nwhere notam_line like 'E)%'),\r\nf_data as (\r\nselect \r\n replace(notam_line,'F)','') LowerLimit\r\n from \r\nbase_data\r\nwhere notam_line like 'F)%'),\r\ng_data as (\r\nselect \r\n replace(notam_line,'G)','') UpperLimit\r\n from \r\nbase_data\r\nwhere notam_line like 'G)%'),\r\nall_data as (\r\nselect \r\n STRING_AGG([notam_line],CHAR(10)) Messagetext\r\n from \r\nbase_data)\r\nselect * from header_data\r\nfull outer join q_data on 1=1\r\nfull outer join a_data on 1=1\r\nfull outer join b_data on 1=1\r\nfull outer join d_data on 1=1\r\nfull outer join e_data on 1=1\r\nfull outer join f_data on 1=1\r\nfull outer join g_data on 1=1\r\nfull outer join all_data on 1=1",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"writeBehavior": "Insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Length",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Length",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Format",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Format",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SubFormat",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SubFormat",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Type",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Type",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SubType",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SubType",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Publisher",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Publisher",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Class",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Class",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Series",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Series",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Year",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Year",
									"type": "Byte",
									"physicalType": "tinyint"
								}
							},
							{
								"source": {
									"name": "Number",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Number",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "SubNumber",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SubNumber",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "Multipart",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Multipart",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "QCode23",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "QCode23",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "QCode45",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "QCode45",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "EffectiveFrom",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "EffectiveFrom",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "EffectiveTill",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "EffectiveTill",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "EST",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "EST",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "HeaderIcaoAirportCode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "HeaderIcaoAirportCode",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "YearOfReferenceNotam",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "YearOfReferenceNotam",
									"type": "Byte",
									"physicalType": "tinyint"
								}
							},
							{
								"source": {
									"name": "NumberOfReferenceNotam",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "NumberOfReferenceNotam",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "Unimportant1",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Unimportant1",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Unimportant2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Unimportant2",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "NumberAndType",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "NumberAndType",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "IcaoCodeFIR",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "IcaoCodeFIR",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Code",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Code",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Traffic",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Traffic",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Purpose",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Purpose",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Scope",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Scope",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Lower",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Lower",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Upper",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Upper",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "GeoLatitudeNm",
									"type": "Single",
									"physicalType": "float"
								},
								"sink": {
									"name": "GeoLatitudeNm",
									"type": "Single",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "GeoLongitudeNm",
									"type": "Single",
									"physicalType": "float"
								},
								"sink": {
									"name": "GeoLongitudeNm",
									"type": "Single",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "GeoRadiusNm",
									"type": "Int16",
									"physicalType": "smallint"
								},
								"sink": {
									"name": "GeoRadiusNm",
									"type": "Int16",
									"physicalType": "smallint"
								}
							},
							{
								"source": {
									"name": "IcaoAirportCode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "IcaoAirportCode",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ActivityStart",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ActivityStart",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "ValidityEnd",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ValidityEnd",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "Schedule",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Schedule",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Text",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Text",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "LowerLimit",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LowerLimit",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "UpperLimit",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "UpperLimit",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Messagetext",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "MessageText",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"sink": {
									"name": "TCreatedId",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"sink": {
									"name": "TLoadDate",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"sink": {
									"name": "TFilename",
									"type": "String",
									"physicalType": "varchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "synapse_table",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "notam"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "synapse_table",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "notam"
						}
					}
				]
			}
		],
		"parameters": {
			"InputFileName": {
				"type": "string",
				"defaultValue": "NOTAM.txt"
			}
		},
		"variables": {
			"v_command": {
				"type": "String"
			}
		},
		"annotations": []
	}
}